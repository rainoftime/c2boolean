[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing regression/pointertranslation/_cs_SafeStack_seqcst_forCSEQ_staticmalloc.c._pp_.c (with preprocessing)
regression/pointertranslation/_cs_SafeStack_seqcst_forCSEQ_staticmalloc.c._pp_.c:3552:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] using specification for function Frama_C_unsigned_int_interval
regression/pointertranslation/_cs_SafeStack_seqcst_forCSEQ_staticmalloc.c._pp_.c:3552:[kernel] warning: Neither code nor specification for function malloc, generating default assigns from the prototype
[value] using specification for function malloc
regression/pointertranslation/_cs_SafeStack_seqcst_forCSEQ_staticmalloc.c._pp_.c:171:[kernel] warning: out of bounds write. assert \valid(__csLOCALPARAM___CS_atomic_store_obj);
regression/pointertranslation/_cs_SafeStack_seqcst_forCSEQ_staticmalloc.c._pp_.c:171:[kernel] warning: all target addresses were invalid. This path is assumed to be dead.
[value] done for function main
[value] ====== VALUES COMPUTED ======
[value] Values at end of function __CS_atomic_store:
  stack.array IN [--..--]
       .head IN {0}
       .count IN {3}
[value] Values at end of function main_thread:
  NON TERMINATING FUNCTION
[value] Values at end of function main:
  NON TERMINATING FUNCTION
